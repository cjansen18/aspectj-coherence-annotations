<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://service.wellsfargo.com/entity/message/2007/" xmlns:base="http://service.wellsfargo.com/base/2003/" targetNamespace="http://service.wellsfargo.com/entity/message/2007/" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="2.34">
	<xs:import namespace="http://service.wellsfargo.com/base/2003/" schemaLocation="../../base/base2003.xsd"/>
	<!--MESSAGE 2007-->
	<!---->
	<!-- Copyright 2007, 2008, 2009 Wells Fargo Bank. All rights reserved.-->
	<!-- -->
	<!-- BEGIN CHANGE HISTORY:-->
	<!--08-18-2009~R. Damlo~Added WAN as a value for initiatorIdType and originatorIdType -->
	<!--12-16-2008~R. Damlo~Added exception appinfo WF2641 -->
	<!--10-16-2008~R. Damlo~Added enumeration annotations; added exception appinfo WF1803; Added appinfo myNSPrefix-->
	<!--06/12/2008~M. Dayton~Removed an apostrophe from embeddedException annotation that was causing code generation to fail-->
	<!--04/23/2008~M. Dayton~Use msg2007 as a namespace abbreviation-->
	<!--04/16/2008~M. Dayton~WFXML 2.1 R2 mainstream approval-->
	<!--08/01/2007~M. Dayton~WFXML 2.1 R2,  message2007 prototype for early adopters-->
	<!--- Removed ExtensionPoint_Type which contains non-interoperable ##any-->
	<!--- Removed deprecated elements WFPath, WFMetrics, WFContext.additionalContext, WFFault.additionalDetail-->
	<!--- Changed activitySourceId to applicationId, subActivitySourceId to subApplicationId, removed activitySourceIdType-->
	<!--- Created session, Initiator, Originator as complex elements  to enforce cardinality.  Added GLEntityNumber to Initiator-->
	<!--- Remove dependencies on other schemas by removing endpoint identifiers.  These can continue to be pulled from message2003.xsd-->
	<!--- Redefine WFContext and WFFault using local elements to support mainframe environments-->
	<!--- Flattened faultCode structure to remove recursive defintions in FaultCode_Type-->
	<!--- Changed faultDetail.referenceId from xs:anyType to DataReference_Type-->
	<!--- Flatten faultDetails structure.  Require severity-->
	<!-- END CHANGE HISTORY-->
	<!-- -->
	<xs:annotation>
		<xs:documentation>Standard message elements defined by  WFXML 2.1 R2.</xs:documentation>
		<xs:appinfo>
			<base:myNSPrefix>msg2007</base:myNSPrefix>
		</xs:appinfo>
		<xs:appinfo>
			<exception>WF2641</exception>
		</xs:appinfo>
	</xs:annotation>
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!--WFContext-->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<xs:complexType name="Session_Type">
		<xs:sequence>
			<xs:element name="sessionId" type="xs:string">
				<xs:annotation>
					<xs:documentation>The Session Id is a universally unique identifer (UUID) that groups a set of messages into a session.   Each message in the session must have an identical Session Id.  The sessionId is propagated to downstream messages and is echoed back to the sender on response messages.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="sessionSequenceNumber" type="xs:string">
				<xs:annotation>
					<xs:documentation>The Session Sequence Number represents the sequence of operations within a session as defined by the sender.    The first operation in a session must have a session sequence number of 1.  Each subsequent operation must increment the value by 1.  Response messages must echo the value received on the request, they do not increment it.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Initiator_Type">
		<xs:sequence>
			<xs:element name="initiatorId" type="xs:string">
				<xs:annotation>
					<xs:documentation>The Initiator Id is a unique identifer of type initiatorIdType.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiatorIdType" type="xs:string">
				<xs:annotation>
					<xs:documentation>The Initiator Id Type classifies the value in initiatorId as belonging to a particular domain.    Preferred values are:  
HRIS - PeopleSoft Human Resources System 
AD - Microsoft Active Directory LAN id 
TOPSECRET - Mainframe security package
CMAPL - A Computer Application Id
WAN - Wachovia "A" Number
</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GLEntityNumber" type="base:GLEntityNumber_Type" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The GL Entity Number, or Internal Legal Entity, that the Initiator is representing.  The values are defined by the General Ledger.  Note that this is different than Hogan Legal Entity which is used internally by CIS.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Originator_Type">
		<xs:sequence>
			<xs:element name="originatorId" type="xs:string">
				<xs:annotation>
					<xs:documentation>Originator Id is a unique identifier for the Origniator.  The value must be of the type indicated by originatorIdType</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="originatorIdType" type="xs:string">
				<xs:annotation>
					<xs:documentation>Originator Id Type classifies the value in originatorId as belonging to a particular domain.    It is not present on response messages.  Preferred  values are: 
ECN - Enterprise Customer Number 
HRIS - PeopleSoft Human Resources System 
AD - Microsoft Active Directory LAN id 
TOPSECRET-  Mainframe security package
WAN - Wachovia "A" Number
</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="WFContext_Type">
		<xs:annotation>
			<xs:documentation>Provides service independent contextual information about the communication session.   Provides support for security, logging, tracking, billing and other common functions. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="messageId" type="xs:string">
				<xs:annotation>
					<xs:documentation>The Message Id is a universally unique identifier (UUID)  that refers to a particular instance of a message.  The uniqueness of the message identifier is guaranteed by the sender that generates it.   In a Request/Response pair, each message has it's own unique message Id.
</xs:documentation>
					<xs:appinfo>
						<exception>WF1803</exception>
					</xs:appinfo>
				</xs:annotation>
			</xs:element>
			<xs:element name="refToMessageId" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The RefToMessageId is used to corralate message pairs.  It is not present on a Request Message.  It is required on a Response message and must contain the messageId of the Request message.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="session" type="Session_Type" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Session groups a set of related messages into a sender defined unit of work.   The scope of a session is typically one customer interaction (a phone call, a online banking session, etc). </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="creationTimestamp" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>The Creation Timestamp is date and time that the message was created.  It should be in universal time (UTC).  However, it may be in local time provided the value includes the offset to UTC.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="invokerId" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Invoker Id is an identifer for the application server, queue, or other software entity that invoked the operation.  It is not necessary on a response message.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="applicationId" type="base:ApplicationId_Type">
				<xs:annotation>
					<xs:documentation>An Application Id  is a unique identifier for a Computer Application.   The value is either a 2-char Mainframe Appliccation Id or a 3-5 character Distributed Appliction Id.  The union of the two sets forms the Enterprise Application Id set.    A list of values on the PAC2000 Application Mnemonic Report. Service providers will place their computer application Id in the response message when processing request messages</xs:documentation>
				</xs:annotation>
				<!-- The PAC2000 Application Mnemonic List is found at:  "http://cbwza3025.wellsfargo.com:7779/reports/rwservlet?pac2000p&report=ast_app_mnem.rep&tolerance=0" -->
			</xs:element>
			<xs:element name="subApplicationId" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>An applicationId may have an additional level of granularity to represent a specific subset of that application system.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="hostName" type="xs:string">
				<xs:annotation>
					<xs:documentation>The DNS host name of the node that created a message.  An IP address can be used if no DNS name is available. The qualified host name value should be used</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="billingAU" type="base:AUNumber_Type" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Billing Accounting Unit is a General Ledger identifier for a cost or profit center.  It is not present on response messages.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="originator" type="Originator_Type" minOccurs="0">
				<xs:annotation>
					<xs:documentation> The Originator  is the person (Customer or Team Member) originating a request   It is not present on response messages.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="initiator" type="Initiator_Type" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The Initiator is the Team Member or Computer Application performing the request on behalf of the Originator.   It is not present on response messages.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<!--WFContext  -->
		</xs:sequence>
	</xs:complexType>
	<xs:element name="WFContext" type="WFContext_Type" nillable="false">
		<xs:annotation>
			<xs:documentation>Message Context</xs:documentation>
		</xs:annotation>
	</xs:element>
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!--WFFault-->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<xs:simpleType name="FaultType_Enum">
		<xs:annotation>
			<xs:documentation>Classifies the fault as a business application failure or a system error.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="APPL">
				<xs:annotation>
					<xs:documentation>Application</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SYSTEM">
				<xs:annotation>
					<xs:documentation>System</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="FaultSeverity_Enum">
		<xs:annotation>
			<xs:documentation>Standard Severity Levels</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="INFORMATION">
				<xs:annotation>
					<xs:documentation>The service processed the message completely.   The results may not be what the client expects.
</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="WARNING">
				<xs:annotation>
					<xs:documentation>The service encountered an expected error situation. The service recovered and the message was processed completely, but the fact that it happened should be recorded to monitor frequency.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ERROR">
				<xs:annotation>
					<xs:documentation>The services encountered an unexpected error, which means the code intercepted an error it cannot handle. All or part of the request was not processed completely. This error is not of a critical nature and typically can be recovered from automatically. Future requests into the system should be able to be processed without error. Someone should be contacted in the near future to resolve the error and to see if changes can be made to prevent the error from happening again.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CRITICAL_ERROR">
				<xs:annotation>
					<xs:documentation>The service encountered a critical error, which affects the accuracy, integrity, reliability, or capability of the system. The request was not processed. Someone should be contacted to address the error as soon as possible.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="DataReference_Type">
		<xs:annotation>
			<xs:documentation>Extend this type to support a complex data reference</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="referenceId" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Uniquely identifes the data item associated with the fault.   Extend DataReference_Type if a composite key is needed.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="WFFault_Type">
		<xs:annotation>
			<xs:documentation>WFXML Fault reporting structure</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="faultCode" type="xs:string">
				<xs:annotation>
					<xs:documentation>A code which identifies the type of fault.  </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="faultSubcode" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>futher identifies the type of fault</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="faultType" type="FaultType_Enum">
				<xs:annotation>
					<xs:documentation>Classifies the fault as a business application failure or a system error.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="faultReasonText" type="xs:string">
				<xs:annotation>
					<xs:documentation>A human readable explanation of the fault. It is not intended for algorithmic processing.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="severity" type="FaultSeverity_Enum">
				<xs:annotation>
					<xs:documentation>An indication of severity.   The values are Information, Warning, Error, Critical Error</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="faultActor" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A name, preferably a URI, which identifies where the fault occured.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="dataReference" type="DataReference_Type" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Allows message data to be associated with the fault. It is typically used when a list is being processed and it is necessary to identify for which row this error is reported.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="adviceText" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Advice to the client support organization or development organization regarding what action they may take to resolve the problem.  It is not intended for algorithmic processing.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="technicalText" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A description of the fault intended for use by a production support person.  When the fault is caused by a specific input message argument, the element tag name should be embedded into this description. It is not intended for algorithmic processing.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="exceptionInstanceId" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A unique identifier each exception that is used to correlate a fault with additional information captured in a system log.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="embeddedException" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The runtime environment native exception trace when a runtime environment exception has occurred.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="stackTrace" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The application specific implementation trace of an exception.  This should be used only in development and testing environments to support debugging. It  SHOULD NOT be used in a production environment.The assumption is that stack traces are being logged and the exception instance id can be used to look up a stack trace in a log if necessary.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="WFFault" type="WFFault_Type" nillable="false">
		<xs:annotation>
			<xs:documentation>A message fault.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:complexType name="WFFaultList_Type">
		<xs:annotation>
			<xs:documentation>An list of WFFaults.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="WFFault" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="WFFaultList" type="WFFaultList_Type" nillable="false">
		<xs:annotation>
			<xs:documentation>A list of faults. </xs:documentation>
		</xs:annotation>
	</xs:element>
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!-- Supporting Elements -->
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<xs:simpleType name="ProcessingMode_Enum">
		<xs:annotation>
			<xs:documentation>List of values for processingMode element</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="ASYNC">
				<xs:annotation>
					<xs:documentation>The client does not want to wait for an immediate processing result.  Return the results asynchronously.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SYNC">
				<xs:annotation>
					<xs:documentation>The client will wait for an immediate processing result.   Respond synchronously</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:element name="processingMode" type="ProcessingMode_Enum" nillable="false">
		<xs:annotation>
			<xs:documentation>provides the ability for a service client to specify whether the request should be processed synchronously or asynchronously when using a synchronous transport (e.g. HTTP).  A value of ASYNC indicates that the client does not want to wait for an immediate processing result.  A value of SYNC indicates that the client does want to wait for an immediate processing result.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="behaviorVersion" type="xs:short" nillable="true">
		<xs:annotation>
			<xs:documentation>Identifies the desired business behavior version.  Service Providers or Application Clients can interrogate this element and recognize that the behavior has changed and take appropriate action.</xs:documentation>
		</xs:annotation>
	</xs:element>
</xs:schema>
