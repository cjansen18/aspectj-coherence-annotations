//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.04.26 at 01:28:04 PM EDT 
//


package com.redsparksystems.service.base._2003;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DeliveryChannelCode_Enum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DeliveryChannelCode_Enum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="ATM"/>
 *     &lt;enumeration value="CONTACT_CENTER"/>
 *     &lt;enumeration value="INTERNET"/>
 *     &lt;enumeration value="DIRECT_MAIL"/>
 *     &lt;enumeration value="DIRECT_SECURED"/>
 *     &lt;enumeration value="STORE"/>
 *     &lt;enumeration value="MOBILE_ACCESS"/>
 *     &lt;enumeration value="DRIVE_UP"/>
 *     &lt;enumeration value="KIOSK"/>
 *     &lt;enumeration value="BACK_OFFICE"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "DeliveryChannelCode_Enum", namespace = "http://service.redsparksystems.com/base/2003/")
@XmlEnum
public enum DeliveryChannelCodeEnum {


    /**
     * A delivery channel Automated Teller Machine is one that uses a network of specialized  computer terminals as delivery points. The ATM machines are typically  activated by a magnetic card and are used for routine banking transactions, such as withdrawal or deposit of funds, transfer of funds between accounts, etc. The users of the terminals may or may not be internal Customers.  This channel includes transactions made using drive-up ATM machines.
     * 
     */
    ATM,

    /**
     * A delivery channel that is used to communicate with an individual through the phone, email, or postal mail.  This will include interactions with a voice response unit (VRU) as wells as interactions with a Team Member.
     * 
     * 
     */
    CONTACT_CENTER,

    /**
     * A delivery channel of Internet provides users access to our financial  services through our Organization's web page on the Internet
     * 
     */
    INTERNET,

    /**
     * A delivery channel of Direct Mail is one that is used to send information (outbound)  to the recipient via the US Postal Service and/or electronic mail for sales/promotional and/or service reasons. 
     * 
     */
    DIRECT_MAIL,

    /**
     * A delivery channel of Direct Secured Access is one that provides customers with access to specific authorized financial services through computers by direct secured connections to our initernal system.  The additional security and authentication to access our network or computer is required from an indirect source.
     * 
     */
    DIRECT_SECURED,

    /**
     * A delivery channel of Store is one that is characterized as an interaction with a Team Member in person at one of our locations or at a third party location.
     * 
     */
    STORE,

    /**
     * A delivery channel of Mobile Access is one that provides our Team Members with access to the network through our computers by remote connection to our internal system.
     * 
     */
    MOBILE_ACCESS,

    /**
     * A delivery channel of Drive Up is one that is characterized by a person interacting with a teller without leaving their automobile.  Typically the teller is located near a  window that is facing the person's atuomobile.
     * 
     */
    DRIVE_UP,

    /**
     * A delivery channel of Kiosk is one that uses computer terminals, typically  housed in a small structure, as delivery points.
     * 
     */
    KIOSK,

    /**
     * A delivery channel of back office is characterized by activities that take place regarding a Party through back office operations.
     * 
     */
    BACK_OFFICE;

    public String value() {
        return name();
    }

    public static DeliveryChannelCodeEnum fromValue(String v) {
        return valueOf(v);
    }

}
