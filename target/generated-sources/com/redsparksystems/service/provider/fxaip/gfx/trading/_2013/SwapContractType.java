//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.04.26 at 01:28:04 PM EDT 
//


package com.redsparksystems.service.provider.fxaip.gfx.trading._2013;

import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.google.common.base.Objects;
import com.redsparksystems.adapters.LocalDateAdapter;
import com.redsparksystems.service.provider.fxaip.base._2013.EntityType;
import com.redsparksystems.service.provider.fxaip.base._2013.ProductEnum;
import com.redsparksystems.service.provider.fxaip.base._2013.SourceSystemType;
import org.joda.time.DateTime;
import org.joda.time.LocalDate;


/**
 * Represents a Swap Contract
 * 
 * <p>Java class for SwapContract_Type complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SwapContract_Type">
 *   &lt;complexContent>
 *     &lt;extension base="{http://service.redsparksystems.com/provider/fxaip/gfx/trading/2013/}Contract_Type">
 *       &lt;sequence>
 *         &lt;element name="dealDate" type="{http://www.w3.org/2001/XMLSchema}date"/>
 *         &lt;element name="traderBooks" type="{http://service.redsparksystems.com/provider/fxaip/gfx/trading/2013/}TraderBooks_Type" minOccurs="0"/>
 *         &lt;element name="portfolios" type="{http://service.redsparksystems.com/provider/fxaip/gfx/trading/2013/}Portfolios_Type" minOccurs="0"/>
 *         &lt;element name="nearLegDetails" type="{http://service.redsparksystems.com/provider/fxaip/gfx/trading/2013/}SpotFwdLeg_Type"/>
 *         &lt;element name="farLegDetails" type="{http://service.redsparksystems.com/provider/fxaip/gfx/trading/2013/}SpotFwdLeg_Type"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SwapContract_Type", namespace = "http://service.redsparksystems.com/provider/fxaip/gfx/trading/2013/", propOrder = {
    "dealDate",
    "traderBooks",
    "portfolios",
    "nearLegDetails",
    "farLegDetails"
})
public class SwapContractType
    extends ContractType
    implements Serializable
{

    private final static long serialVersionUID = 17L;
    @XmlElement(required = true, type = String.class)
    @XmlJavaTypeAdapter(LocalDateAdapter.class)
    @XmlSchemaType(name = "date")
    protected LocalDate dealDate;
    protected TraderBooksType traderBooks;
    protected PortfoliosType portfolios;
    @XmlElement(required = true)
    protected SpotFwdLegType nearLegDetails;
    @XmlElement(required = true)
    protected SpotFwdLegType farLegDetails;

    /**
     * Gets the value of the dealDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public LocalDate getDealDate() {
        return dealDate;
    }

    /**
     * Sets the value of the dealDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDealDate(LocalDate value) {
        this.dealDate = value;
    }

    /**
     * Gets the value of the traderBooks property.
     * 
     * @return
     *     possible object is
     *     {@link TraderBooksType }
     *     
     */
    public TraderBooksType getTraderBooks() {
        return traderBooks;
    }

    /**
     * Sets the value of the traderBooks property.
     * 
     * @param value
     *     allowed object is
     *     {@link TraderBooksType }
     *     
     */
    public void setTraderBooks(TraderBooksType value) {
        this.traderBooks = value;
    }

    /**
     * Gets the value of the portfolios property.
     * 
     * @return
     *     possible object is
     *     {@link PortfoliosType }
     *     
     */
    public PortfoliosType getPortfolios() {
        return portfolios;
    }

    /**
     * Sets the value of the portfolios property.
     * 
     * @param value
     *     allowed object is
     *     {@link PortfoliosType }
     *     
     */
    public void setPortfolios(PortfoliosType value) {
        this.portfolios = value;
    }

    /**
     * Gets the value of the nearLegDetails property.
     * 
     * @return
     *     possible object is
     *     {@link SpotFwdLegType }
     *     
     */
    public SpotFwdLegType getNearLegDetails() {
        return nearLegDetails;
    }

    /**
     * Sets the value of the nearLegDetails property.
     * 
     * @param value
     *     allowed object is
     *     {@link SpotFwdLegType }
     *     
     */
    public void setNearLegDetails(SpotFwdLegType value) {
        this.nearLegDetails = value;
    }

    /**
     * Gets the value of the farLegDetails property.
     * 
     * @return
     *     possible object is
     *     {@link SpotFwdLegType }
     *     
     */
    public SpotFwdLegType getFarLegDetails() {
        return farLegDetails;
    }

    /**
     * Sets the value of the farLegDetails property.
     * 
     * @param value
     *     allowed object is
     *     {@link SpotFwdLegType }
     *     
     */
    public void setFarLegDetails(SpotFwdLegType value) {
        this.farLegDetails = value;
    }

    @Override
    public String toString() {
        return Objects.toStringHelper(this).add("tradeId", tradeId).add("branch", branch).add("contractId", contractId).add("contractSeq", contractSeq).add("status", status).add("inTime", inTime).add("productId", productId).add("sourceSystem", sourceSystem).add("externalRefId1", externalRefId1).add("externalRefId2", externalRefId2).add("revenueEntityId", revenueEntityId).add("updateTime", updateTime).add("updateUser", updateUser).add("flipExternalResponse", flipExternalResponse).add("sourceReferenceId", sourceReferenceId).add("dealDate", dealDate).add("traderBooks", traderBooks).add("portfolios", portfolios).add("nearLegDetails", nearLegDetails).add("farLegDetails", farLegDetails).toString();
    }

    @Override
    public int hashCode() {
        return Objects.hashCode(tradeId, branch, contractId, contractSeq, status, inTime, productId, sourceSystem, externalRefId1, externalRefId2, revenueEntityId, updateTime, updateUser, flipExternalResponse, sourceReferenceId, dealDate, traderBooks, portfolios, nearLegDetails, farLegDetails);
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) {
            return true;
        }
        if (other == null) {
            return false;
        }
        if (getClass()!= other.getClass()) {
            return false;
        }
        final SwapContractType o = ((SwapContractType) other);
        return (((((((((((((((((((Objects.equal(tradeId, o.tradeId)&&Objects.equal(branch, o.branch))&&Objects.equal(contractId, o.contractId))&&Objects.equal(contractSeq, o.contractSeq))&&Objects.equal(status, o.status))&&Objects.equal(inTime, o.inTime))&&Objects.equal(productId, o.productId))&&Objects.equal(sourceSystem, o.sourceSystem))&&Objects.equal(externalRefId1, o.externalRefId1))&&Objects.equal(externalRefId2, o.externalRefId2))&&Objects.equal(revenueEntityId, o.revenueEntityId))&&Objects.equal(updateTime, o.updateTime))&&Objects.equal(updateUser, o.updateUser))&&Objects.equal(flipExternalResponse, o.flipExternalResponse))&&Objects.equal(sourceReferenceId, o.sourceReferenceId))&&Objects.equal(dealDate, o.dealDate))&&Objects.equal(traderBooks, o.traderBooks))&&Objects.equal(portfolios, o.portfolios))&&Objects.equal(nearLegDetails, o.nearLegDetails))&&Objects.equal(farLegDetails, o.farLegDetails));
    }

    public SwapContractType withDealDate(LocalDate value) {
        setDealDate(value);
        return this;
    }

    public SwapContractType withTraderBooks(TraderBooksType value) {
        setTraderBooks(value);
        return this;
    }

    public SwapContractType withPortfolios(PortfoliosType value) {
        setPortfolios(value);
        return this;
    }

    public SwapContractType withNearLegDetails(SpotFwdLegType value) {
        setNearLegDetails(value);
        return this;
    }

    public SwapContractType withFarLegDetails(SpotFwdLegType value) {
        setFarLegDetails(value);
        return this;
    }

    @Override
    public SwapContractType withTradeId(long value) {
        setTradeId(value);
        return this;
    }

    @Override
    public SwapContractType withBranch(String value) {
        setBranch(value);
        return this;
    }

    @Override
    public SwapContractType withContractId(String value) {
        setContractId(value);
        return this;
    }

    @Override
    public SwapContractType withContractSeq(String value) {
        setContractSeq(value);
        return this;
    }

    @Override
    public SwapContractType withStatus(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public SwapContractType withInTime(DateTime value) {
        setInTime(value);
        return this;
    }

    @Override
    public SwapContractType withProductId(ProductEnum value) {
        setProductId(value);
        return this;
    }

    @Override
    public SwapContractType withSourceSystem(SourceSystemType value) {
        setSourceSystem(value);
        return this;
    }

    @Override
    public SwapContractType withExternalRefId1(String value) {
        setExternalRefId1(value);
        return this;
    }

    @Override
    public SwapContractType withExternalRefId2(String value) {
        setExternalRefId2(value);
        return this;
    }

    @Override
    public SwapContractType withRevenueEntityId(EntityType value) {
        setRevenueEntityId(value);
        return this;
    }

    @Override
    public SwapContractType withUpdateTime(DateTime value) {
        setUpdateTime(value);
        return this;
    }

    @Override
    public SwapContractType withUpdateUser(String value) {
        setUpdateUser(value);
        return this;
    }

    @Override
    public SwapContractType withFlipExternalResponse(boolean value) {
        setFlipExternalResponse(value);
        return this;
    }

    @Override
    public SwapContractType withSourceReferenceId(String value) {
        setSourceReferenceId(value);
        return this;
    }

}
