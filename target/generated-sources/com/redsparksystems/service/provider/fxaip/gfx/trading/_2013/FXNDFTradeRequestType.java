//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.04.26 at 01:28:04 PM EDT 
//


package com.redsparksystems.service.provider.fxaip.gfx.trading._2013;

import java.io.Serializable;
import java.math.BigDecimal;
import java.math.BigInteger;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.google.common.base.Objects;
import com.tangosol.io.pof.annotation.Portable;
import com.tangosol.io.pof.annotation.PortableProperty;
import com.redsparksystems.adapters.LocalDateAdapter;
import com.redsparksystems.service.provider.fxaip.base._2013.BuySellIndicatorEnum;
import com.redsparksystems.service.provider.fxaip.base._2013.CurrencyTermEnum;
import com.redsparksystems.service.provider.fxaip.base._2013.EntityType;
import com.redsparksystems.service.provider.fxaip.base._2013.SourceSystemType;
import com.redsparksystems.service.provider.fxaip.base._2013.TenorDateType;
import org.joda.time.LocalDate;


/**
 * Trade Request for booking a FX NDF (non deliverable forward) contract
 * 
 * <p>Java class for FXNDFTradeRequest_Type complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="FXNDFTradeRequest_Type">
 *   &lt;complexContent>
 *     &lt;extension base="{http://service.redsparksystems.com/provider/fxaip/gfx/trading/2013/}FXSpotFwdTradeRequest_Type">
 *       &lt;sequence>
 *         &lt;element name="fixingDate" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/>
 *         &lt;element name="fixedNDF" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="averageNDF" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="settlementCurrency" type="{http://service.redsparksystems.com/base/2003/}CurrencyCode_Type" minOccurs="0"/>
 *         &lt;element name="fixingTradeId" type="{http://www.w3.org/2001/XMLSchema}integer" minOccurs="0"/>
 *         &lt;element name="fixingDefinition" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="fixingStatus" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="settlementAccount" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="accountType" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FXNDFTradeRequest_Type", namespace = "http://service.redsparksystems.com/provider/fxaip/gfx/trading/2013/", propOrder = {
    "fixingDate",
    "fixedNDF",
    "averageNDF",
    "settlementCurrency",
    "fixingTradeId",
    "fixingDefinition",
    "fixingStatus",
    "settlementAccount",
    "accountType"
})
@Portable
public class FXNDFTradeRequestType
    extends FXSpotFwdTradeRequestType
    implements Serializable
{

    private final static long serialVersionUID = 17L;
    @XmlElement(type = String.class)
    @XmlJavaTypeAdapter(LocalDateAdapter.class)
    @XmlSchemaType(name = "date")
    @PortableProperty(0)
    protected LocalDate fixingDate;
    @PortableProperty(1)
    protected Boolean fixedNDF;
    @PortableProperty(2)
    protected Boolean averageNDF;
    @PortableProperty(3)
    protected String settlementCurrency;
    @PortableProperty(4)
    protected BigInteger fixingTradeId;
    @PortableProperty(5)
    protected String fixingDefinition;
    @PortableProperty(6)
    protected String fixingStatus;
    @PortableProperty(7)
    protected String settlementAccount;
    @PortableProperty(8)
    protected String accountType;

    /**
     * Gets the value of the fixingDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public LocalDate getFixingDate() {
        return fixingDate;
    }

    /**
     * Sets the value of the fixingDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFixingDate(LocalDate value) {
        this.fixingDate = value;
    }

    /**
     * Gets the value of the fixedNDF property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isFixedNDF() {
        return fixedNDF;
    }

    /**
     * Sets the value of the fixedNDF property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setFixedNDF(Boolean value) {
        this.fixedNDF = value;
    }

    /**
     * Gets the value of the averageNDF property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isAverageNDF() {
        return averageNDF;
    }

    /**
     * Sets the value of the averageNDF property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setAverageNDF(Boolean value) {
        this.averageNDF = value;
    }

    /**
     * Gets the value of the settlementCurrency property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSettlementCurrency() {
        return settlementCurrency;
    }

    /**
     * Sets the value of the settlementCurrency property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSettlementCurrency(String value) {
        this.settlementCurrency = value;
    }

    /**
     * Gets the value of the fixingTradeId property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getFixingTradeId() {
        return fixingTradeId;
    }

    /**
     * Sets the value of the fixingTradeId property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setFixingTradeId(BigInteger value) {
        this.fixingTradeId = value;
    }

    /**
     * Gets the value of the fixingDefinition property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFixingDefinition() {
        return fixingDefinition;
    }

    /**
     * Sets the value of the fixingDefinition property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFixingDefinition(String value) {
        this.fixingDefinition = value;
    }

    /**
     * Gets the value of the fixingStatus property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFixingStatus() {
        return fixingStatus;
    }

    /**
     * Sets the value of the fixingStatus property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFixingStatus(String value) {
        this.fixingStatus = value;
    }

    /**
     * Gets the value of the settlementAccount property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSettlementAccount() {
        return settlementAccount;
    }

    /**
     * Sets the value of the settlementAccount property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSettlementAccount(String value) {
        this.settlementAccount = value;
    }

    /**
     * Gets the value of the accountType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getAccountType() {
        return accountType;
    }

    /**
     * Sets the value of the accountType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setAccountType(String value) {
        this.accountType = value;
    }

    @Override
    public String toString() {
        return Objects.toStringHelper(this).add("tradeId", tradeId).add("contractId", contractId).add("contractSeq", contractSeq).add("branch", branch).add("customerId", customerId).add("sourceReferenceId", sourceReferenceId).add("sourceSystem", sourceSystem).add("userId", userId).add("externalRef1", externalRef1).add("externalRef2", externalRef2).add("flipExternalResponse", flipExternalResponse).add("salesCredit", salesCredit).add("coverTradeId", coverTradeId).add("additionalInfo", additionalInfo).add("dealDate", dealDate).add("valueDate", valueDate).add("marketRate", marketRate).add("customerRate", customerRate).add("baseRate", baseRate).add("referenceMidRate", referenceMidRate).add("fixedCurrency", fixedCurrency).add("wfBuyCurrency", wfBuyCurrency).add("wfBuyCurrencyAmt", wfBuyCurrencyAmt).add("wfSellCurrency", wfSellCurrency).add("wfSellCurrencyAmt", wfSellCurrencyAmt).add("currencyTerm", currencyTerm).add("currency", currency).add("ctrCurrency", ctrCurrency).add("currencyAmount", currencyAmount).add("ctrCurrencyAmount", ctrCurrencyAmount).add("wfBuySellIndicator", wfBuySellIndicator).add("portfolio", portfolio).add("traderBook", traderBook).add("dealText", dealText).add("homeCurrency", homeCurrency).add("fixingDate", fixingDate).add("fixedNDF", fixedNDF).add("averageNDF", averageNDF).add("settlementCurrency", settlementCurrency).add("fixingTradeId", fixingTradeId).add("fixingDefinition", fixingDefinition).add("fixingStatus", fixingStatus).add("settlementAccount", settlementAccount).add("accountType", accountType).toString();
    }

    @Override
    public int hashCode() {
        return Objects.hashCode(tradeId, contractId, contractSeq, branch, customerId, sourceReferenceId, sourceSystem, userId, externalRef1, externalRef2, flipExternalResponse, salesCredit, coverTradeId, additionalInfo, dealDate, valueDate, marketRate, customerRate, baseRate, referenceMidRate, fixedCurrency, wfBuyCurrency, wfBuyCurrencyAmt, wfSellCurrency, wfSellCurrencyAmt, currencyTerm, currency, ctrCurrency, currencyAmount, ctrCurrencyAmount, wfBuySellIndicator, portfolio, traderBook, dealText, homeCurrency, fixingDate, fixedNDF, averageNDF, settlementCurrency, fixingTradeId, fixingDefinition, fixingStatus, settlementAccount, accountType);
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) {
            return true;
        }
        if (other == null) {
            return false;
        }
        if (getClass()!= other.getClass()) {
            return false;
        }
        final FXNDFTradeRequestType o = ((FXNDFTradeRequestType) other);
        return (((((((((((((((((((((((((((((((((((((((((((Objects.equal(tradeId, o.tradeId)&&Objects.equal(contractId, o.contractId))&&Objects.equal(contractSeq, o.contractSeq))&&Objects.equal(branch, o.branch))&&Objects.equal(customerId, o.customerId))&&Objects.equal(sourceReferenceId, o.sourceReferenceId))&&Objects.equal(sourceSystem, o.sourceSystem))&&Objects.equal(userId, o.userId))&&Objects.equal(externalRef1, o.externalRef1))&&Objects.equal(externalRef2, o.externalRef2))&&Objects.equal(flipExternalResponse, o.flipExternalResponse))&&Objects.equal(salesCredit, o.salesCredit))&&Objects.equal(coverTradeId, o.coverTradeId))&&Objects.equal(additionalInfo, o.additionalInfo))&&Objects.equal(dealDate, o.dealDate))&&Objects.equal(valueDate, o.valueDate))&&Objects.equal(marketRate, o.marketRate))&&Objects.equal(customerRate, o.customerRate))&&Objects.equal(baseRate, o.baseRate))&&Objects.equal(referenceMidRate, o.referenceMidRate))&&Objects.equal(fixedCurrency, o.fixedCurrency))&&Objects.equal(wfBuyCurrency, o.wfBuyCurrency))&&Objects.equal(wfBuyCurrencyAmt, o.wfBuyCurrencyAmt))&&Objects.equal(wfSellCurrency, o.wfSellCurrency))&&Objects.equal(wfSellCurrencyAmt, o.wfSellCurrencyAmt))&&Objects.equal(currencyTerm, o.currencyTerm))&&Objects.equal(currency, o.currency))&&Objects.equal(ctrCurrency, o.ctrCurrency))&&Objects.equal(currencyAmount, o.currencyAmount))&&Objects.equal(ctrCurrencyAmount, o.ctrCurrencyAmount))&&Objects.equal(wfBuySellIndicator, o.wfBuySellIndicator))&&Objects.equal(portfolio, o.portfolio))&&Objects.equal(traderBook, o.traderBook))&&Objects.equal(dealText, o.dealText))&&Objects.equal(homeCurrency, o.homeCurrency))&&Objects.equal(fixingDate, o.fixingDate))&&Objects.equal(fixedNDF, o.fixedNDF))&&Objects.equal(averageNDF, o.averageNDF))&&Objects.equal(settlementCurrency, o.settlementCurrency))&&Objects.equal(fixingTradeId, o.fixingTradeId))&&Objects.equal(fixingDefinition, o.fixingDefinition))&&Objects.equal(fixingStatus, o.fixingStatus))&&Objects.equal(settlementAccount, o.settlementAccount))&&Objects.equal(accountType, o.accountType));
    }

    public FXNDFTradeRequestType withFixingDate(LocalDate value) {
        setFixingDate(value);
        return this;
    }

    public FXNDFTradeRequestType withFixedNDF(Boolean value) {
        setFixedNDF(value);
        return this;
    }

    public FXNDFTradeRequestType withAverageNDF(Boolean value) {
        setAverageNDF(value);
        return this;
    }

    public FXNDFTradeRequestType withSettlementCurrency(String value) {
        setSettlementCurrency(value);
        return this;
    }

    public FXNDFTradeRequestType withFixingTradeId(BigInteger value) {
        setFixingTradeId(value);
        return this;
    }

    public FXNDFTradeRequestType withFixingDefinition(String value) {
        setFixingDefinition(value);
        return this;
    }

    public FXNDFTradeRequestType withFixingStatus(String value) {
        setFixingStatus(value);
        return this;
    }

    public FXNDFTradeRequestType withSettlementAccount(String value) {
        setSettlementAccount(value);
        return this;
    }

    public FXNDFTradeRequestType withAccountType(String value) {
        setAccountType(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withDealDate(LocalDate value) {
        setDealDate(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withValueDate(TenorDateType value) {
        setValueDate(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withMarketRate(SpotFwdAllInRateType value) {
        setMarketRate(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withCustomerRate(SpotFwdAllInRateType value) {
        setCustomerRate(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withBaseRate(SpotFwdAllInRateType value) {
        setBaseRate(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withReferenceMidRate(SpotFwdAllInRateType value) {
        setReferenceMidRate(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withFixedCurrency(String value) {
        setFixedCurrency(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withWfBuyCurrency(String value) {
        setWfBuyCurrency(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withWfBuyCurrencyAmt(BigDecimal value) {
        setWfBuyCurrencyAmt(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withWfSellCurrency(String value) {
        setWfSellCurrency(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withWfSellCurrencyAmt(BigDecimal value) {
        setWfSellCurrencyAmt(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withCurrencyTerm(CurrencyTermEnum value) {
        setCurrencyTerm(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withCurrency(String value) {
        setCurrency(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withCtrCurrency(String value) {
        setCtrCurrency(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withCurrencyAmount(BigDecimal value) {
        setCurrencyAmount(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withCtrCurrencyAmount(BigDecimal value) {
        setCtrCurrencyAmount(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withWfBuySellIndicator(BuySellIndicatorEnum value) {
        setWfBuySellIndicator(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withPortfolio(PortfoliosType value) {
        setPortfolio(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withTraderBook(TraderBooksType value) {
        setTraderBook(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withDealText(String value) {
        setDealText(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withHomeCurrency(String value) {
        setHomeCurrency(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withTradeId(BigInteger value) {
        setTradeId(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withContractId(String value) {
        setContractId(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withContractSeq(String value) {
        setContractSeq(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withBranch(String value) {
        setBranch(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withCustomerId(EntityType value) {
        setCustomerId(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withSourceReferenceId(String value) {
        setSourceReferenceId(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withSourceSystem(SourceSystemType value) {
        setSourceSystem(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withUserId(EntityType value) {
        setUserId(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withExternalRef1(String value) {
        setExternalRef1(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withExternalRef2(String value) {
        setExternalRef2(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withFlipExternalResponse(Boolean value) {
        setFlipExternalResponse(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withSalesCredit(Boolean value) {
        setSalesCredit(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withCoverTradeId(String value) {
        setCoverTradeId(value);
        return this;
    }

    @Override
    public FXNDFTradeRequestType withAdditionalInfo(AdditionalInfoType value) {
        setAdditionalInfo(value);
        return this;
    }

}
