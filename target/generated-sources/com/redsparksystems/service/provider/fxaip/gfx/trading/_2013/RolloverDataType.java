//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.04.26 at 01:28:04 PM EDT 
//


package com.redsparksystems.service.provider.fxaip.gfx.trading._2013;

import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import com.google.common.base.Objects;


/**
 * Trade Rollover Data
 * 
 * <p>Java class for RolloverData_Type complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="RolloverData_Type">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="rollOverId" type="{http://www.w3.org/2001/XMLSchema}long" minOccurs="0"/>
 *         &lt;element name="tradeId" type="{http://www.w3.org/2001/XMLSchema}long" minOccurs="0"/>
 *         &lt;element name="rolloverTradeId" type="{http://www.w3.org/2001/XMLSchema}long" minOccurs="0"/>
 *         &lt;element name="offsetTradeId" type="{http://www.w3.org/2001/XMLSchema}long" minOccurs="0"/>
 *         &lt;element name="rolloverReason" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="updateUser" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RolloverData_Type", namespace = "http://service.redsparksystems.com/provider/fxaip/gfx/trading/2013/", propOrder = {
    "rollOverId",
    "tradeId",
    "rolloverTradeId",
    "offsetTradeId",
    "rolloverReason",
    "updateUser"
})
public class RolloverDataType implements Serializable
{

    private final static long serialVersionUID = 17L;
    protected Long rollOverId;
    protected Long tradeId;
    protected Long rolloverTradeId;
    protected Long offsetTradeId;
    protected String rolloverReason;
    protected String updateUser;

    /**
     * Gets the value of the rollOverId property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    public Long getRollOverId() {
        return rollOverId;
    }

    /**
     * Sets the value of the rollOverId property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setRollOverId(Long value) {
        this.rollOverId = value;
    }

    /**
     * Gets the value of the tradeId property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    public Long getTradeId() {
        return tradeId;
    }

    /**
     * Sets the value of the tradeId property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setTradeId(Long value) {
        this.tradeId = value;
    }

    /**
     * Gets the value of the rolloverTradeId property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    public Long getRolloverTradeId() {
        return rolloverTradeId;
    }

    /**
     * Sets the value of the rolloverTradeId property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setRolloverTradeId(Long value) {
        this.rolloverTradeId = value;
    }

    /**
     * Gets the value of the offsetTradeId property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    public Long getOffsetTradeId() {
        return offsetTradeId;
    }

    /**
     * Sets the value of the offsetTradeId property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setOffsetTradeId(Long value) {
        this.offsetTradeId = value;
    }

    /**
     * Gets the value of the rolloverReason property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRolloverReason() {
        return rolloverReason;
    }

    /**
     * Sets the value of the rolloverReason property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRolloverReason(String value) {
        this.rolloverReason = value;
    }

    /**
     * Gets the value of the updateUser property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getUpdateUser() {
        return updateUser;
    }

    /**
     * Sets the value of the updateUser property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setUpdateUser(String value) {
        this.updateUser = value;
    }

    @Override
    public String toString() {
        return Objects.toStringHelper(this).add("rollOverId", rollOverId).add("tradeId", tradeId).add("rolloverTradeId", rolloverTradeId).add("offsetTradeId", offsetTradeId).add("rolloverReason", rolloverReason).add("updateUser", updateUser).toString();
    }

    @Override
    public int hashCode() {
        return Objects.hashCode(rollOverId, tradeId, rolloverTradeId, offsetTradeId, rolloverReason, updateUser);
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) {
            return true;
        }
        if (other == null) {
            return false;
        }
        if (getClass()!= other.getClass()) {
            return false;
        }
        final RolloverDataType o = ((RolloverDataType) other);
        return (((((Objects.equal(rollOverId, o.rollOverId)&&Objects.equal(tradeId, o.tradeId))&&Objects.equal(rolloverTradeId, o.rolloverTradeId))&&Objects.equal(offsetTradeId, o.offsetTradeId))&&Objects.equal(rolloverReason, o.rolloverReason))&&Objects.equal(updateUser, o.updateUser));
    }

    public RolloverDataType withRollOverId(Long value) {
        setRollOverId(value);
        return this;
    }

    public RolloverDataType withTradeId(Long value) {
        setTradeId(value);
        return this;
    }

    public RolloverDataType withRolloverTradeId(Long value) {
        setRolloverTradeId(value);
        return this;
    }

    public RolloverDataType withOffsetTradeId(Long value) {
        setOffsetTradeId(value);
        return this;
    }

    public RolloverDataType withRolloverReason(String value) {
        setRolloverReason(value);
        return this;
    }

    public RolloverDataType withUpdateUser(String value) {
        setUpdateUser(value);
        return this;
    }

}
