//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.04.26 at 01:28:04 PM EDT 
//


package com.redsparksystems.service.provider.fxaip.gfx.settlement._2013;

import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;
import com.google.common.base.Objects;
import com.redsparksystems.service.provider.fxaip.base._2013.EntityType;
import com.redsparksystems.service.provider.fxaip.base._2013.TradeIdentifier;


/**
 * Represents either the incoming or outgoing payment flow (instructions) for settlement
 * 
 * <p>Java class for SingleSettlementData_Type complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SingleSettlementData_Type">
 *   &lt;complexContent>
 *     &lt;extension base="{http://service.redsparksystems.com/provider/fxaip/gfx/settlement/2013/}SettlementData_Type">
 *       &lt;sequence>
 *         &lt;choice>
 *           &lt;element name="wfPayInstruction" type="{http://service.redsparksystems.com/provider/fxaip/gfx/settlement/2013/}SettlementInstruction_Type"/>
 *           &lt;element name="wfReceiveInstruction" type="{http://service.redsparksystems.com/provider/fxaip/gfx/settlement/2013/}SettlementInstruction_Type"/>
 *         &lt;/choice>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SingleSettlementData_Type", namespace = "http://service.redsparksystems.com/provider/fxaip/gfx/settlement/2013/", propOrder = {
    "wfReceiveInstruction",
    "wfPayInstruction"
})
public class SingleSettlementDataType
    extends SettlementDataType
    implements Serializable
{

    private final static long serialVersionUID = 17L;
    protected SettlementInstructionType wfReceiveInstruction;
    protected SettlementInstructionType wfPayInstruction;

    /**
     * Gets the value of the wfReceiveInstruction property.
     * 
     * @return
     *     possible object is
     *     {@link SettlementInstructionType }
     *     
     */
    public SettlementInstructionType getWfReceiveInstruction() {
        return wfReceiveInstruction;
    }

    /**
     * Sets the value of the wfReceiveInstruction property.
     * 
     * @param value
     *     allowed object is
     *     {@link SettlementInstructionType }
     *     
     */
    public void setWfReceiveInstruction(SettlementInstructionType value) {
        this.wfReceiveInstruction = value;
    }

    /**
     * Gets the value of the wfPayInstruction property.
     * 
     * @return
     *     possible object is
     *     {@link SettlementInstructionType }
     *     
     */
    public SettlementInstructionType getWfPayInstruction() {
        return wfPayInstruction;
    }

    /**
     * Sets the value of the wfPayInstruction property.
     * 
     * @param value
     *     allowed object is
     *     {@link SettlementInstructionType }
     *     
     */
    public void setWfPayInstruction(SettlementInstructionType value) {
        this.wfPayInstruction = value;
    }

    @Override
    public String toString() {
        return Objects.toStringHelper(this).add("source", source).add("dealIdentifier", dealIdentifier).add("updateUser", updateUser).add("wfReceiveInstruction", wfReceiveInstruction).add("wfPayInstruction", wfPayInstruction).toString();
    }

    @Override
    public int hashCode() {
        return Objects.hashCode(source, dealIdentifier, updateUser, wfReceiveInstruction, wfPayInstruction);
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) {
            return true;
        }
        if (other == null) {
            return false;
        }
        if (getClass()!= other.getClass()) {
            return false;
        }
        final SingleSettlementDataType o = ((SingleSettlementDataType) other);
        return ((((Objects.equal(source, o.source)&&Objects.equal(dealIdentifier, o.dealIdentifier))&&Objects.equal(updateUser, o.updateUser))&&Objects.equal(wfReceiveInstruction, o.wfReceiveInstruction))&&Objects.equal(wfPayInstruction, o.wfPayInstruction));
    }

    public SingleSettlementDataType withWfReceiveInstruction(SettlementInstructionType value) {
        setWfReceiveInstruction(value);
        return this;
    }

    public SingleSettlementDataType withWfPayInstruction(SettlementInstructionType value) {
        setWfPayInstruction(value);
        return this;
    }

    @Override
    public SingleSettlementDataType withSource(String value) {
        setSource(value);
        return this;
    }

    @Override
    public SingleSettlementDataType withDealIdentifier(TradeIdentifier value) {
        setDealIdentifier(value);
        return this;
    }

    @Override
    public SingleSettlementDataType withUpdateUser(EntityType value) {
        setUpdateUser(value);
        return this;
    }

}
